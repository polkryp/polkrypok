import telebot
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime, date, timedelta

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
TELEGRAM_TOKEN = '8155418035:AAFJRv6HBTaxqkHeujTcPHDlk3SrxrzLGBY'
SPREADSHEET_NAME = 'BotResponse'

# --- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets ---
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("google-credentials.json", scope)
client = gspread.authorize(creds)
sheet = client.open(SPREADSHEET_NAME).sheet1

bot = telebot.TeleBot(TELEGRAM_TOKEN)

from telebot.types import ReplyKeyboardMarkup, KeyboardButton

russia_flag = "üá∑üá∫"
world_emoji = "üåç"
money_emoji = "üí∞"

def make_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row(
        KeyboardButton(f"–†–§ {russia_flag} 1"),
        KeyboardButton(f"–†–§ {russia_flag} 2"),
        KeyboardButton(f"–†–§ {russia_flag} 3"),
        KeyboardButton(f"–†–§ {russia_flag} 4"),
        KeyboardButton(f"–†–§ {russia_flag} 5"),
    )
    keyboard.row(
        KeyboardButton(f"–ú–ò–† {world_emoji} 1"),
        KeyboardButton(f"–ú–ò–† {world_emoji} 2"),
        KeyboardButton(f"–ú–ò–† {world_emoji} 3"),
        KeyboardButton(f"–ú–ò–† {world_emoji} 4"),
        KeyboardButton(f"–ú–ò–† {world_emoji} 5"),
    )
    keyboard.row(
        KeyboardButton(f"–ö–û {money_emoji} 1"),
        KeyboardButton(f"–ö–û {money_emoji} 2"),
        KeyboardButton(f"–ö–û {money_emoji} 4"),
        KeyboardButton(f"–ö–û {money_emoji} 6"),
        KeyboardButton(f"–ö–û {money_emoji} 8"),
        KeyboardButton(f"–ö–û {money_emoji} 10"),
    )
    return keyboard

def parse_message(text):
    try:
        parts = text.split()
        if len(parts) >= 2:
            key = parts[0].upper()
            amount = int(parts[-1])
            return key, amount
    except:
        return None, None
    return None, None

def add_row(key, amount):
    now_str = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    if key == "–†–§":
        row = [amount, 0, 0, now_str]
    elif key == "–ú–ò–†":
        row = [0, amount, 0, now_str]
    elif key == "–ö–û":
        row = [0, 0, amount, now_str]
    else:
        return False
    sheet.append_row(row)
    return True

def get_sums_by_date_range(start_date, end_date):
    try:
        records = sheet.get_all_records()
    except Exception:
        return 0,0,0
    sum_rf = 0
    sum_mir = 0
    sum_ko = 0
    for rec in records:
        dt_str = rec.get('–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è', '')
        if dt_str:
            try:
                dt = datetime.strptime(dt_str, "%Y-%m-%d %H:%M:%S").date()
                if start_date <= dt <= end_date:
                    sum_rf += int(rec.get('–†–§', 0) or 0)
                    sum_mir += int(rec.get('–ú–ò–†', 0) or 0)
                    sum_ko += int(rec.get('–ö–û', 0) or 0)
            except:
                continue
    return sum_rf, sum_mir, sum_ko

def get_today_sums():
    today = date.today()
    return get_sums_by_date_range(today, today)

def get_week_sums():
    today = date.today()
    start = today - timedelta(days=today.weekday())  # –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏
    end = start + timedelta(days=6)  # –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
    return get_sums_by_date_range(start, end)

def get_month_sums():
    today = date.today()
    start = today.replace(day=1)
    # –∫–æ–Ω–µ—Ü –º–µ—Å—è—Ü–∞: —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å -1
    if today.month == 12:
        next_month = today.replace(year=today.year+1, month=1, day=1)
    else:
        next_month = today.replace(month=today.month+1, day=1)
    end = next_month - timedelta(days=1)
    return get_sums_by_date_range(start, end)

@bot.message_handler(commands=['start'])
def start_handler(message):
    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Google Sheets.\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/today ‚Äî –∏—Ç–æ–≥–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è\n"
        "/week ‚Äî –∏—Ç–æ–≥–∏ –∑–∞ –Ω–µ–¥–µ–ª—é\n"
        "/month ‚Äî –∏—Ç–æ–≥–∏ –∑–∞ –º–µ—Å—è—Ü\n"
        "/last ‚Äî –ø–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å\n"
        "/delete ‚Äî —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å\n\n"
        "–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–π —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "–†–§ 5, –ú–ò–† 3, –ö–û 4 –∏ —Ç.–¥."
    )
    bot.send_message(message.chat.id, welcome_text, reply_markup=make_keyboard())

@bot.message_handler(commands=['today'])
def today_handler(message):
    sum_rf, sum_mir, sum_ko = get_today_sums()
    bot.send_message(message.chat.id, f"–ò—Ç–æ–≥–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:\n–†–§: {sum_rf}\n–ú–ò–†: {sum_mir}\n–ö–û: {sum_ko}")

@bot.message_handler(commands=['week'])
def week_handler(message):
    sum_rf, sum_mir, sum_ko = get_week_sums()
    bot.send_message(message.chat.id, f"–ò—Ç–æ–≥–∏ –∑–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é:\n–†–§: {sum_rf}\n–ú–ò–†: {sum_mir}\n–ö–û: {sum_ko}")

@bot.message_handler(commands=['month'])
def month_handler(message):
    sum_rf, sum_mir, sum_ko = get_month_sums()
    bot.send_message(message.chat.id, f"–ò—Ç–æ–≥–∏ –∑–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü:\n–†–§: {sum_rf}\n–ú–ò–†: {sum_mir}\n–ö–û: {sum_ko}")

@bot.message_handler(commands=['last'])
def last_handler(message):
    try:
        all_values = sheet.get_all_values()
        if len(all_values) <= 1:
            bot.send_message(message.chat.id, "–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ.")
            return
        last_row = all_values[-1]
        text = (
            f"–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å:\n"
            f"–†–§: {last_row[0]}\n"
            f"–ú–ò–†: {last_row[1]}\n"
            f"–ö–û: {last_row[2]}\n"
            f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {last_row[3]}"
        )
        bot.send_message(message.chat.id, text)
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å–∏: {e}")

@bot.message_handler(commands=['delete'])
def delete_handler(message):
    try:
        rows = len(sheet.get_all_values())
        if rows > 1:
            sheet.delete_rows(rows)
            bot.send_message(message.chat.id, "–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞.")
        else:
            bot.send_message(message.chat.id, "–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}")

@bot.message_handler(func=lambda message: True)
def all_message_handler(message):
    key, amount = parse_message(message.text)
    if key and amount:
        if add_row(key, amount):
            bot.send_message(message.chat.id, f"–ó–∞–ø–∏—Å–∞–Ω–æ: {key} = {amount}")
        else:
            bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.")
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –†–§ 5 –∏–ª–∏ –ú–ò–† 3 –∏–ª–∏ –ö–û 4")

if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    bot.polling(none_stop=True) 


